<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>网络配置 | 特倫蘇的日與夜</title>
    <link>https://blog.cklau.cc/tags/%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/</link>
      <atom:link href="https://blog.cklau.cc/tags/%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/index.xml" rel="self" type="application/rss+xml" />
    <description>网络配置</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en</language><lastBuildDate>Mon, 29 Jan 2024 00:00:00 +0800</lastBuildDate>
    <item>
      <title>🛜 境内外 CDN 分流配置</title>
      <link>https://blog.cklau.cc/post/cdn-divertor.zh/</link>
      <pubDate>Mon, 29 Jan 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.cklau.cc/post/cdn-divertor.zh/</guid>
      <description>&lt;p&gt;本文纯属个人记录，不保证是最优解决方案，仅供参考。 对于博客的境内外 CDN 分流有很多更加优雅的方式，而我选择了最蠢的「跳转」。&lt;/p&gt;
&lt;h2 id=&#34;前置条件&#34;&gt;前置条件&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;我的静态博客是托管在 &lt;a href=&#34;https://pages.github.com&#34;&gt;GitHub Page&lt;/a&gt;，并且使用了 &lt;a href=&#34;https://www.cloudflare.com&#34;&gt;Cloudflare&lt;/a&gt; 的 CDN 服务。&lt;/li&gt;
&lt;li&gt;我拥有一台境内服务器，并且有一个已备案域名，可以满足国内 CDN 的要求。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;境内外-cdn-分流&#34;&gt;境内外 CDN 分流&lt;/h2&gt;
&lt;h3 id=&#34;网站运行&#34;&gt;网站运行&lt;/h3&gt;
&lt;p&gt;我的网站部署流程是这样的：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在本地编写博客内容，使用 &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt; 生成静态网页进行内容渲染进行检查。&lt;/li&gt;
&lt;li&gt;将 source file 推动到 &lt;a href=&#34;https://github.com/terenceliu98.github.io.source&#34;&gt;TerenceLiu98.github.io.source&lt;/a&gt; 仓库，使用 GitHub Action 进行自动部署。&lt;/li&gt;
&lt;li&gt;在 GitHub Action 中，使用 Hugo 生成静态网页，并将生成的网页推送到 &lt;a href=&#34;https://github.com/terenceliu98.github.io&#34;&gt;TerenceLiu98.github.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;在 Cloudflare 中，将 &lt;a href=&#34;https://github.com/terenceliu98.github.io&#34;&gt;TerenceLiu98.github.io&lt;/a&gt; 仓库的内容进行 CDN 加速。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;具体配置&#34;&gt;具体配置&lt;/h3&gt;
&lt;p&gt;你需要在国内的服务器上搭建一个 HTTP 服务，用于分流境内的请求。这里我使用了 &lt;a href=&#34;https://www.nginx.com&#34;&gt;Nginx&lt;/a&gt; 作为 HTTP 服务，因为我从一开始就在使用 nginx 所以相对熟悉。不过你也可以使用其他 HTTP 服务，比如 &lt;a href=&#34;https://caddyserver.com&#34;&gt;Caddy&lt;/a&gt;，Caddy 有一个很好的特性，就是可以自动申请 HTTPS 证书，这样你就不需要自己去申请证书了。我这里使用 ACME 进行证书申请，所以就不再使用 Caddy 了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;server &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       	listen 80;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      	listen &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;::&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;:80;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      	server_name blog.rho.ac.cn;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;301&lt;/span&gt; https://$host$request_uri;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;server &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        listen &lt;span style=&#34;color:#ae81ff&#34;&gt;443&lt;/span&gt; ssl;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        server_name blog.rho.ac.cn;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ssl_certificate /home/ubuntu/acme-script/ssl/rho.ac.cn.pem;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ssl_certificate_key /home/ubuntu/acme-script/ssl/rho.ac.cn.key;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	root /var/www/terenceliu98.github.io;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	index index.php index.html index.htm;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  location / &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  	try_files $uri $uri/ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;404;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其中，&lt;code&gt;server_name&lt;/code&gt; 是准备的备案后域名，&lt;code&gt;root&lt;/code&gt; 指向的是我存储博客内容的地方，&lt;code&gt;index&lt;/code&gt; 指定了默认的首页。&lt;code&gt;ssl_certificate&lt;/code&gt; 和 &lt;code&gt;ssl_certificate_key&lt;/code&gt; 指定了 HTTPS 证书的位置。你也可以对 nginx 配置文件进行定制，这里不再赘述。在准备好这些以后，可以尝试运行网站，如果没有问题，那么就可以进行下一步了。&lt;/p&gt;
&lt;p&gt;当然，这里应该会遇到一个域名错误的问题，因为在 Hugo 里我们配置了 CNAME，所以它在渲染的时候会将域名替换成 CNAME 中指定的域名，这样就会出现域名不匹配的问题。这里我使用了一个很蠢的方式解决，就是在 Hugo 渲染之后，进行域名替换。这里我使用了一个 Bash 脚本，将域名替换成了我准备的备案后域名。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git restore . &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git pull
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; file in &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;find -iname &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*.html&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/blog.cklau.cc/blog.rho.ac.cn/g&amp;#39;&lt;/span&gt; $file
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在网站可以正常运行后，我们仅需要在腾讯云的 CDN 控制台里添加自己的域名即可，将域名解析到提供的 CNAME，主源站指向自己国内的服务器 IP，配置好回源 Host 即可&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。其他平台也是一样的方法，这里不再赘述。&lt;/p&gt;
&lt;p&gt;Cloudflare 的配置也十分简单，仅需要在 Rules 里添加一个规则，我这里选择的是根据国家进行分流，这样虽然是一刀切，但是确实保证了用户的使用体验（也是因为我买不起 GeoDNS）。&lt;/p&gt;
&lt;h3 id=&#34;后续&#34;&gt;后续&lt;/h3&gt;
&lt;p&gt;因为腾讯云 CDN 的 HTTPS 需要自己提供证书（也需要付费），所以我将刚才申请到的 ACME 证书添加到了指定的地方，不知道是否有可以自动化的方法，不然就需要三个月更新一次证书了 🥹 。&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;HOST 就填自己的域名即可，不需要填 IP，因为我们已经配置了 HTTP 服务，所以需要域名进行分流。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>