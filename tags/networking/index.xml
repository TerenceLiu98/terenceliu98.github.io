<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>networking on Terence Lau</title>
    <link>https://blog.cklau.cc/tags/networking/</link>
    <description>Recent content in networking on Terence Lau</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Copyright ¬© 2005‚Äì2022, Terence Junjie LIU; all rights reserved.</copyright>
    <lastBuildDate>Mon, 26 Dec 2022 00:16:21 +0800</lastBuildDate><atom:link href="https://blog.cklau.cc/tags/networking/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>üë®‚Äçüíª My Personal Experimental Network: L-Net 1.1</title>
      <link>https://blog.cklau.cc/post/lnet-2/</link>
      <pubDate>Mon, 26 Dec 2022 00:16:21 +0800</pubDate>
      
      <guid>https://blog.cklau.cc/post/lnet-2/</guid>
      <description>Before In the previous project: Homelab, I create a experimental network and I call it L-Net 1.0. However, I am trying to redesign the network as I am trying to maximize the usage of all the bandwidth, route auto-correction, and manage the resources based on one machine outside the cluster. Here is the diagram:
Here, as usual, I made three network areas, ‚ÄúEast-Asia-CN‚Äù is 192.168.101.0/24 , ‚ÄúSoutheast-Asia-HKSAR‚Äú is 192.168.102.0/24, and ‚ÄúEast-Aisa-JP‚Äú is 192.</description>
    </item>
    
    <item>
      <title>üë®‚Äçüíª My Personal Experimental Network: L-Net</title>
      <link>https://blog.cklau.cc/post/lnet-1/</link>
      <pubDate>Tue, 18 Oct 2022 00:11:21 +0800</pubDate>
      
      <guid>https://blog.cklau.cc/post/lnet-1/</guid>
      <description>Before In the previous project: Homelab, I listed all my devices and VPS on a table, where all the VPS own a specific public IP, and I tried to use the Wireguard to connect them into a Full-mesh intranet.
However, to investigate deeper into the network performance, I started to learn how to federate these clusters while not affecting the current usage. What&amp;rsquo;s more, if I can federate this isolated network, I don&amp;rsquo;t need to build separate services in different clusters.</description>
    </item>
    
    <item>
      <title>Homelab: Don&#39;t Let the Docker escape from the ufw&#39;s control</title>
      <link>https://blog.cklau.cc/post/my-homelab-4/</link>
      <pubDate>Thu, 21 Jul 2022 00:11:21 +0800</pubDate>
      
      <guid>https://blog.cklau.cc/post/my-homelab-4/</guid>
      <description>&amp;ldquo;Uncomplicated firewall&amp;rdquo;, a.k.a, UFW, is the new/next-generation of firewall of Linux system. As says in its name, &amp;ldquo;uncomplicated&amp;rdquo; is the feature. However, in some situation, it is still complicated, for example, works with Docker.
Usually, for the homelab/VPS, we self-host a bunch of services and use them with reverse proxy (like Nginx, Caddy, Traefik) with different subdomain. However, Docker tries to modify the firewall rules without notification, like this:
ubuntu@myserver:~$ sudo ufw status Status: active To Action From -- ------ ---- 80 ALLOW Anywhere 443 ALLOW Anywhere 22 ALLOW Anywhere 80 (v6) ALLOW Anywhere (v6) 443 (v6) ALLOW Anywhere (v6) 22 (v6) ALLOW Anywhere (v6) In ufw list, I only allow the SSH port and HTTP/HTTPS ports.</description>
    </item>
    
    <item>
      <title>Homelab: My Distributed Homelab</title>
      <link>https://blog.cklau.cc/post/my-homelab-2/</link>
      <pubDate>Thu, 21 Jul 2022 00:11:21 +0800</pubDate>
      
      <guid>https://blog.cklau.cc/post/my-homelab-2/</guid>
      <description>Networking For the homelab, I would like to choose a commerical company&amp;rsquo;s product, as the service can be guaranteed by the company reputation. All my devices can connect to the WAN via NAT1 such that I don&amp;rsquo;t need the nat passthrough solution. I choose Tailscale as I mentioned, it performs well under my testing. Just follow the instruction and the networking problem is solved.
Service For the homelab, I would like to docker as it is very covinence and can set up easily.</description>
    </item>
    
    <item>
      <title>Homelab: My Network setup</title>
      <link>https://blog.cklau.cc/post/my-homelab-3/</link>
      <pubDate>Thu, 21 Jul 2022 00:11:21 +0800</pubDate>
      
      <guid>https://blog.cklau.cc/post/my-homelab-3/</guid>
      <description>In General Tools I use I choose Wireguard since it‚Äôs fast because of its light design, and it‚Äôs secure because it uses the best cryptographic tools available. However, for each time, the user may need to consider a SUBNET for the wireguard and a IP for each node, for me, it is every annoyed, as I have too many subnet need to be configured. Thus, I build a little tool: wgtools</description>
    </item>
    
    <item>
      <title>Homelab: My Devices</title>
      <link>https://blog.cklau.cc/post/my-homelab-1/</link>
      <pubDate>Wed, 20 Jul 2022 00:11:21 +0800</pubDate>
      
      <guid>https://blog.cklau.cc/post/my-homelab-1/</guid>
      <description>For a long time, I held many different digital gadgets, however, I did not consider putting them into a cluster, or more precisely, setting up a platform where I can easily manage them. In this summer vacation, I started thinking of a possibility of setting up a distributed homelab.
Why Distributed Since I am wandering around the big bay area, multiple different devices are scattered. Thus, I have to build a distributed cluster.</description>
    </item>
    
  </channel>
</rss>
